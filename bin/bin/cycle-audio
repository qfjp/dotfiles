#!/usr/bin/python
import re
import subprocess
import sys

TYPE = "sink" if len(sys.argv) <= 1 else sys.argv[1]
TO_MUTE = "" if len(sys.argv) <= 2 else sys.argv[2]
NOTIFY_HINTS = "string:x-canonical-private-synchronous:Pipewire Waybar Module"

# Build devices map (human_name -> machine_name)
indiv_devices_cmd = subprocess.run(
    ["pactl", "list", "{}s".format(TYPE)], capture_output=True
)
indiv_devices = indiv_devices_cmd.stdout.decode("utf-8").split("\n")
indiv_devices = [
    re.sub("^\\s*(Name|Description): ", "", device)
    for device in indiv_devices
    if re.search("^\\s*(Name|Description)", device)
]
devices_map = {
    indiv_devices[ix]: indiv_devices[ix + 1]
    for ix in range(0, len(indiv_devices), 2)
    if indiv_devices[ix][-8:] != ".monitor"
}

default_dev_cmd = subprocess.run(
    ["pactl", "get-default-{}".format(TYPE)], capture_output=True
)
default_dev = default_dev_cmd.stdout.decode("utf-8").strip()

if TO_MUTE != "":
    get_mute_cmd = subprocess.run(
        ["pactl", "get-{}-mute".format(TYPE), default_dev], capture_output=True
    )
    mute_status = get_mute_cmd.stdout.decode("utf-8").strip()[6:]
    mute_action = "Muted" if mute_status == "no" else "Unmuted"
    subprocess.run(["pactl", "set-{}-mute".format(TYPE), default_dev, "toggle"])
    subprocess.run(
        [
            "notify-send",
            "-h",
            NOTIFY_HINTS,
            "{} Pipewire {}".format(mute_action, TYPE.title()),
            devices_map[default_dev],
        ]
    )
    sys.exit()


devices = sorted(devices_map.items(), key=lambda x: x[0])
prev = devices[-1]
devices.append((default_dev, ""))
for cur in devices:
    prev_dev, prev_name = prev
    cur_dev, cur_name = cur
    if cur_dev == default_dev:
        subprocess.run(["pactl", "set-default-{}".format(TYPE), prev_dev])
        subprocess.run(
            [
                "notify-send",
                "-h",
                NOTIFY_HINTS,
                "Set Pipewire {} Default".format(TYPE.title()),
                prev_name,
            ]
        )
        sys.exit()
    prev = cur
