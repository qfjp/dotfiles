# if a session doesn't exist, create it
#new-session
set -g base-index 1

set -g default-command "${SHELL}"

#set -g default-terminal "xterm-256color"
if-shell "test $TERM != linux" "set -g default-terminal screen-256color" "set -g default-terminal linux"

# prevent commands like 'less' from clearing the screen on exit
#set-window-option -g alternate-screen off

set -g set-titles on
#set -g set-titles-string '#S: #W'
set -g set-titles-string '#S: #T'

# Visual bell
set -g bell-action any
set -g visual-activity on
#set -g visual-bell on

# Fix window splitting to something more recognizeable
#unbind %
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Command Prefix (like screen)
unbind C-b
set-option -g prefix "C- "
set-option -g prefix2 "C-q"
bind-key " " send-prefix

# next-layout was previously tied to " ", so rebind it to something else
bind 0 next-layout

# Powerline
source $HOME/.tmux/tmuxline-base16
set -g focus-events on
set -g status-style bg=default
set -g status-justify absolute-centre

bind - display-panes

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
is_emacs='echo "#{pane_current_command}" | grep -iqE "(^|\/)emacs(client)?$"'
not_tmux="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|fzf)$'"
is_finch="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(finch|.finch-wrapped)$'"
bind -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$not_tmux" "send-keys C-\\" "select-pane -l"

set-window-option -g mode-keys vi #vi keys
set-option -g status-keys vi

# xmonad-like controls
bind j select-pane -t :.+
bind k select-pane -t :.-
bind h resize-pane -t 0 -L 8
bind H resize-pane -t 0 -U 8
bind l resize-pane -t 0 -R 8
bind L resize-pane -t 0 -D 8
bind J swap-pane -D
bind K swap-pane -U

bind -n C-f if-shell "$is_finch" "run-shell emoji-picker.sh" "send-keys C-f"

bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i"

# set 12 hr clock
set-window-option -g clock-mode-style 12

# ICCCM Selection integration (using primary, not clipboard)
unbind p
unbind b
unbind y
bind b previous-window
# copies paste buffer to primary
bind y run "tmux show-buffer | xsel -i"
# Copy primary to paste-buffer, then C-]
bind p run "tmux set-buffer -- \"$(xsel -o)\"; tmux paste-buffer"

set -sg escape-time 0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# Useful keybinding outside of tmux
unbind -n C-\\

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
